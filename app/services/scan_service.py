from typing import Any, Sequence

from fastapi import Depends
from uuid import UUID

from sqlalchemy import Row

from app.models.scan_model import Scan
from app.repositories.scan_repository import ScanRepository


class ScanService:
    scan_repository = ScanRepository

    def __init__(self, scan_repository: ScanRepository = Depends()) -> None:
        self.scan_repository = scan_repository

    def create(self, scan_data: Scan) -> Scan:
        "Generate a new scan from the given scan data"
        return self.scan_repository.create(scan_data)

    def get_all(self, qr_code_uuid: UUID) -> Sequence[Row[tuple[Any, ...] | Any]]:
        "Get all Scan generated by a QR Code"
        return self.scan_repository.get_all(qr_code_uuid)

    def get(self, qr_code_uuid: UUID) -> Scan:
        "Get a Scan by QR Code UUID"
        return self.scan_repository.get(qr_code_uuid)

    def get_total_scan(self, qr_code_uuid: UUID) -> Sequence[Row[tuple[Any, ...] | Any]]:
        "Get total scans by a QR Code"
        return self.scan_repository.get_total_scan(qr_code_uuid)
