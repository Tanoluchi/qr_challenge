from fastapi import Depends
from uuid import UUID
from app.models.qr_model import QRCode
from app.repositories.qr_repository import QRCodeRepository
from app.schemas.qr_schema import CreateQRCodeSchema, UpdateQRCodeSchema


class QRCodeService:
    qr_code_repository = QRCodeRepository

    def __init__(self, qr_code_repository: QRCodeRepository = Depends()) -> None:
        self.qr_code_repository = qr_code_repository

    def create(self, qr_code_body: CreateQRCodeSchema, user_uuid: UUID) -> QRCode:
        "Create a new qr code in the database"
        qr_code_data = QRCode(
            url=qr_code_body.url_str,
            color=qr_code_body.color,
            size=qr_code_body.size,
            user_uuid=user_uuid
        )
        return self.qr_code_repository.create(qr_code_data)

    def get_all(self, user_uuid: UUID) -> list[QRCode]:
        "Get all QR Codes generated by a user"
        return self.qr_code_repository.get_all(user_uuid)

    def get(self, qr_code_uuid: UUID) -> QRCode:
        "Get a QR Code by UUID"
        return self.qr_code_repository.get(qr_code_uuid)

    def update(self, qr_code_uuid: UUID, qr_code_body: UpdateQRCodeSchema) -> QRCode:
        "Update a QR Code"
        qr_code = self.get(qr_code_uuid)
        return self.qr_code_repository.update(qr_code, qr_code_body)